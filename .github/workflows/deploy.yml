name: Build, Push & Deploy Backend

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: minhtuan2811/fcm-backend
      BUILD_CONTEXT: ./BackendClubManagement
      DOCKERFILE_PATH: BackendClubManagement

    steps:
      # 1. Checkout code
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Setup Docker Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build & push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.BUILD_CONTEXT }}/${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          platforms: linux/amd64

      # 5. Copy docker-compose.yml to Server (tự động sync file config)
      - name: Copy docker-compose.yml to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml" # File ở root repo
          target: "~/fcm-backend/" # Tạo file ~/fcm-backend/docker-compose.yml trên server
          overwrite: true

      # 6. Deploy on server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            APP_DIR=~/fcm-backend
            mkdir -p $APP_DIR  # Tạo thư mục nếu chưa có
            cd $APP_DIR

            # Tạo .env từ GitHub Secrets (thêm Redis host/port cho an toàn)
            cat > .env <<EOL
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            HOST_FRONT_END=${{ secrets.HOST_FRONT_END }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            SPRING_REDIS_HOST=redis-app
            SPRING_REDIS_PORT=6379
            EOL

            # Stop cũ (nếu đang chạy), pull image mới, start
            docker-compose down || true  # Ignore nếu chưa có container
            docker-compose pull
            docker-compose up -d

            # Wait và check status (optional, để log)
            sleep 10
            docker-compose ps

            # Cleanup dangling images
            docker image prune -f

            echo "Deployment completed successfully!"
